import { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';
import { Observable, combineLatest } from 'rxjs';
import {flatMap, map} from 'rxjs/operators';
import {ColChallange, CollSignup, Feed} from '../../models/feed';

@Injectable()
export class FeedService {
  colChallangeCollection: AngularFirestoreCollection<ColChallange>;
  feedItem: Observable<Feed[]>;

  constructor(private afs: AngularFirestore) { }

  collectionInitialization() {
    this.colChallangeCollection = this.afs.collection('blogs');
     this.feedItem = this.colChallangeCollection.snapshotChanges().pipe(map(changes  => {
      return changes.map( change => {
       const data = c.payload.doc.data();
       const blogid = c.payload.doc.id ;
       const userid = c.payload.doc.byuser;
       const blgbody = c.payload.doc.body;
       const  blgimg = c.payload.doc.imgurl;
       const  bloglikes = c.payload.doc.likes;

          return this.afs.doc('users/' + userid).valueChanges().pipe(map( (userData: User) => {
            return Object.assign(
              { blogrefid: blogid ,buserid: userid,user: userData.firstName, useravtar: userData.avtar, body: blgbody, bimgurl: blgimg , likes : bloglikes}); }
          ));
      });
    }), flatMap(feeds => combineLatest(feeds)));
  }

  sellectAllNews() {
    this.collectionInitialization();
    return this.feedItem;
  }
}
